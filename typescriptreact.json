{
	"console log text": {
		"prefix": "ct",
		"body": [
			"console.log('$1');"
		],
		"description": "Log text output to console"
	},
	"console log": {
		"prefix": "cl",
		"body": [
			"console.log($1);"
		],
		"description": "Log text output to console"
	},
	"console log object": {
		"prefix": "co",
		"body": [
			"console.log({ $1 });"
		],
		"description": "Log json object to console"
	},
	"background color: red": {
		"prefix": "bg",
		"body": [
			"backgroundColor: 'red',"
		]
	},
	"spacer vertical": {
		"prefix": "sw",
		"body": [
			"<Spacer width={$1} />"
		]
	},
	"spacer horizontal": {
		"prefix": "sh",
		"body": [
			"<Spacer height={$1} />"
		]
	},
	"create stylesheet": {
		"prefix": "sst",
		"body": [
			"const styles = StyleSheet.create({",
			"  container: {",
			"    $1 ",
			"  },",
			"});",
			""
		]
	},
	"FunctionComponent with one props": {
		"prefix": "fc1",
		"body": [
		  "import { theme } from '@src/common/theme/theme';",
		  "import { FunctionComponent } from 'react';",
		  "import { StyleSheet, View } from 'react-native';",
		  "",
		  "interface Props {",
		  "  $1: string;",
		  "}",
		  "",
		  "export const $TM_FILENAME_BASE: FunctionComponent<Props> = ({ $1 }) => {",
		  "  return <View style={styles.container}>{$1}</View>;",
		  "};",
		  "",
		  "const styles = StyleSheet.create({",
		  "  container: {",
		  "    paddingHorizontal: theme.hPadding,",
		  "  },",
		  "});",
		  ""
		]
	  },
	  "FunctionComponent with no props": {
		"prefix": "fc0",
		"body": [
		  "import { theme } from '@src/common/theme/theme';",
		  "import { FunctionComponent } from 'react';",
		  "import { StyleSheet, View } from 'react-native';",
		  "",
		  "export const $TM_FILENAME_BASE: FunctionComponent = () => {",
		  "  return <View style={styles.container}></View>;",
		  "};",
		  "",
		  "const styles = StyleSheet.create({",
		  "  container: {",
		  "    paddingHorizontal: theme.hPadding,",
		  "  },",
		  "});",
		  ""
		]
	  },
	  "Test snapshot": {
		"prefix": "snap",
		"body": [
		  "import { render } from '@src/jest/render';",
		  "import { screen } from '@testing-library/react-native';",
		  "import React from 'react';",
		  "import { $1 } from '../components/$1.component';",
		  "",
		  "describe('$1', () => {",
		  "  it('should render correctly', () => {",
		  "    render({ Component: <$1 /> });",
		  "",
		  "    expect(screen).toMatchComponentSnapshot();",
		  "  });",
		  "});",
		  ""
		],
		"description": ""
	  }
}
